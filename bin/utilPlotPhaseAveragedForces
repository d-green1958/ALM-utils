#!/usr/bin/env python3

import os
import matplotlib.pyplot as plt
import numpy as np
import argparse
import sys



def main():
    parser = argparse.ArgumentParser(description='Plot phase averaged force distributions.')
    parser.add_argument('directory', nargs='?', default=os.getcwd(),
                        help='Optional directory path to plot residuals for (default: current directory)')
    
    #plot types
    parser.add_argument('-spanwise', action='store_true',help='plot the spanswise distirbution of phase averaged forces.')
    parser.add_argument('-integrated', action='store_true',help='Plot the phase averaged integrated forces.')

    # options
    parser.add_argument('-NPeriods' , type=int, help='The number of periods from the last time step (default: 50)',
                        default=50)
    args = parser.parse_args()
    
    if (not args.spanwise) and (not args.integrated):
        print(" ERR: -- please provide either -spanwise or integrated -- ")
        sys.exit(1)
    

    sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    from src import turbineOutput
    
    # check case directory exists
    dir_path = os.path.abspath(args.directory)
    if not os.path.isdir(dir_path):
        print(f"Directory '{dir_path}' is not valid!")
        sys.exit(1)
    
    data = turbineOutput.read_file(dir_path, file_names=["axialForce", "tangentialForce", "rotationAngle", "radiusC" ])
    radial_pos = turbineOutput.process_radius(data)
    times, forces = turbineOutput.process_spanwise_forces(data, ["axialForce", "tangentialForce"])
    
    print(data["rotationAngle"])


    
    print(f"averaging over {args.NPeriods}")
    
    
    
    

if __name__ == "__main__":
    main()