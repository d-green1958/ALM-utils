#!/usr/bin/env python3

import numpy as np
import matplotlib.pyplot as plt
import sys
import os
import pandas as pd
import argparse

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from src import turbineOutput
from src import plot


              
        
def main():
    parser = argparse.ArgumentParser(description='Plot streamwise force distribution.')
    parser.add_argument('directory', nargs='?', default=os.getcwd(),
                        help='Optional directory path to plot residuals for (default: current directory)')
    parser.add_argument('-instantTime', type=float, help='Plot at some time.')
    parser.add_argument('-latestTime', action='store_true',help='Flag to plot at the latest time.')
    args = parser.parse_args()
    
    plot_something = False
    if args.latestTime:
        print("plotting final time")
        plot_something = True
    
    if args.instantTime is not None:
        print(f"Instant time: {args.instantTime}")
        plot_something = True
        
    if plot_something == False:
        print("no flags given")
        sys.exit(1)
    
    # check case directory exists
    dir_path = os.path.abspath(args.directory)
    if not os.path.isdir(dir_path):
        print(f"Directory '{dir_path}' is not valid!")
        sys.exit(1)

    data = turbineOutput.read_file(dir_path, ["axialForce", "tangentialForce", "radiusC"])
    radial_pos = turbineOutput.process_radius(data)
    times, forces = turbineOutput.process_spanwise_forces(data, ["axialForce", "tangentialForce"])
        
    if args.latestTime:
        plot.plot_instantaneous_spanwise_forces(radial_pos, times, forces, times[-1])
    
    if args.instantTime is not None:
        plot.plot_instantaneous_spanwise_forces(radial_pos, times, forces, args.instantTime)
    
    
    plt.show()
    
    return

if __name__ == "__main__":
    main()    
